y2=rep(0.6,12),
x2=paste0((seq(0,5.5,0.5))),
angle=360000-seq(0,330,30)
)
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
geom_jitter(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
coord_polar() +
ylim(c(0,NA)) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5))
depth1 =  data.frame(depth1.pos = sample(1:6000000,100), depth1.height = 1.1)
depth2 =  data.frame(depth2.pos = sample(1:6000000,100), depth2.height = 0.9)
depth2 =  data.frame(depth2.pos = sample(1:6000000,100), depth2.height = 0.7)
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
geom_line(data = depth1 , aes(depth1.pos,depth1.height), color="#333333",size=3) +
geom_line(data = depth2 , aes(depth2.pos,depth2.height), color="#333333",size=3) +
geom_jitter(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
coord_polar() +
ylim(c(0,NA)) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5))
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
geom_line(data = depth1 , aes(depth1.pos,depth1.height), color="#C02942",size=3) +
geom_line(data = depth2 , aes(depth2.pos,depth2.height), color="#ECD078",size=3)
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
geom_line(data = depth1 , aes(as.numeric(depth1.pos),depth1.height), color="#C02942",size=3) +
geom_line(data = depth2 , aes(depth2.pos,depth2.height), color="#ECD078",size=3)
depth1
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
geom_line(data = depth1 , aes(as.numdepth1.pos,depth1.height), color="#C02942",size=3) +
geom_line(data = depth2 , aes(depth2.pos,depth2.height), color="#ECD078",size=3)
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
geom_line(data = depth1 , aes(depth2.pos,depth1.height), color="#C02942",size=3) +
geom_line(data = depth2 , aes(depth2.pos,depth2.height), color="#ECD078",size=3)
geom_line(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
coord_polar() +
ylim(c(0,NA)) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5))
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
# geom_line(data = depth1 , aes(depth2.pos,depth1.height), color="#C02942",size=3) +
# geom_line(data = depth2 , aes(depth2.pos,depth2.height), color="#ECD078",size=3)
geom_line(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
coord_polar() +
ylim(c(0,NA)) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5))
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
geom_jitter(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
coord_polar() +
ylim(c(0,NA)) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5))
library(ggplot2)
library(tidyverse)
#install.packages("ggalluvial")
library(ggalluvial)
#install.packages("showtext")
library(showtext)
library(ggtext)
library(cowplot)
library(magick)
## Loading Google fonts (https://fonts.google.com/)
font_add_google("Bebas Neue", "bebas")
font_add_google("Montserrat", "montserrat")
showtext_auto()
chocolate <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-18/chocolate.csv')
#by origin
ranking_exports <- chocolate %>%
count(country_of_bean_origin) %>%
filter(country_of_bean_origin!="Blend") %>%
arrange(-n) %>%
top_n(5)
top_exports <- ranking_exports$country_of_bean_origin
ranking_imports <- chocolate %>%
count(company_location) %>%
arrange(-n) %>%
top_n(5)
top_imports <- ranking_imports$company_location
ranking_manu <- chocolate %>%
count(company_manufacturer) %>%
arrange(-n) %>%
top_n(10)
top_manu <- ranking_manu$company_manufacturer
top_choco <- chocolate %>%
filter(company_location %in% top_imports) %>%
filter(country_of_bean_origin%in%top_exports) %>%
filter(company_manufacturer%in%top_manu) %>%
count(company_manufacturer,country_of_bean_origin, company_location) %>%
mutate(origin = "origin") %>%
rename(total = "n")
## aesthetics
color_palette  <- c("#8B9A46",
"#8B9A46",
"#8B9A46",
"#8B9A46",
"#541212",
"#8B9A46",
"#8B9A46",
"#8B9A46")
#plot
plot <- ggplot(top_choco,
aes(axis1 = country_of_bean_origin,
axis2 = company_location,
axis3 = company_manufacturer,
y = total)) +
geom_alluvium(aes(fill = country_of_bean_origin),
curve_type = "quintic",
width = 1/12,
knot.pos = 0.4,
alpha= 0.7)+
geom_stratum(aes(fill = country_of_bean_origin),
width = 1/6, color = "black", alpha=1, fill ="white",
linetype="dotted") +
scale_color_manual(values = color_palette) +
scale_fill_manual(values = color_palette) +
scale_x_continuous(breaks = 1:3,
labels = c("Origin", "Destination country", "Company"),
position = "top") +
geom_text(stat = "stratum",
aes(label = after_stat(stratum)),
color = "black",
family="montserrat",
size = 3) +
theme_minimal() +
labs(y = "",
x="")+
theme(
legend.position = "none",
plot.title = element_text(size = 35,
family = "bebas",
face = "bold"),
plot.subtitle = element_text(size=12,
family = "montserrat",
margin = margin(t=5,b=20)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(size = 10, family = "montserrat", face="bold")
)
plot
(
penguins_lodes <-
penguins %>%
count(species, island, year, sex, name = "freq") %>%
rowid_to_column("alluvium") %>%
mutate(year = factor(year)) %>%
pivot_longer(
-c(alluvium, freq, species),
names_to = "variable", values_to = "stratum"
)
)
library(tidyverse)
library(palmerpenguins)
library(ggalluvial)
library(ggpubr)
library(magick)
library(patchwork)
library(munsell)
library(colorspace)
library(flair)
install.packages("flair")
library(flair)
library(flair)
(
penguins_lodes <-
penguins %>%
count(species, island, year, sex, name = "freq") %>%
rowid_to_column("alluvium") %>%
mutate(year = factor(year)) %>%
pivot_longer(
-c(alluvium, freq, species),
names_to = "variable", values_to = "stratum"
)
)
penguins %>%
count(species, island, year, sex, name = "freq")
penguins %>%
count(species, island, year, sex, name = "freq") %>%
rowid_to_column("alluvium")
test.df
test.df %>%
rowid_to_column("alluvium")
(
penguins_lodes <-
penguins %>%
count(species, island, year, sex, name = "freq") %>%
rowid_to_column("alluvium") %>%
mutate(year = factor(year)) %>%
pivot_longer(
-c(alluvium, freq, species),
names_to = "variable", values_to = "stratum"
)
)
test.df
test.df %>%
rowid_to_column("alluvium") %>%
ggplot() +
aes(x=Mappers,y=value,
stratum=SNP_caller, alluvium=alluvium, label=SNP_caller)+
geom_alluvium()
test.df %>%
rowid_to_column("alluvium") %>%
ggplot() +
aes(x=Mappers,y=value,
stratum=SNP_caller, alluvium=alluvium, label=SNP_caller)+
geom_alluvium(aes(fill=SNP_caller))
test.df %>%
rowid_to_column("alluvium") %>%
ggplot() +
aes(x=Mappers,y=value,
stratum=SNP_caller, alluvium=alluvium, label=SNP_caller)+
geom_alluvium(aes(fill=SNP_caller),
aes.bind="alluvia")
test.df %>%
rowid_to_column("alluvium") %>%
ggplot() +
aes(x=Mappers,y=value,
stratum=SNP_caller, alluvium=alluvium, label=SNP_caller)+
geom_alluvium(aes(fill=SNP_caller),
aes.bind = "alluvia",
colour = "darkgray",
reverse = FALSE)
test.df %>%
rowid_to_column("alluvium") %>%
ggplot() +
aes(x=Mappers,y=value,
stratum=SNP_caller, alluvium=alluvium, label=SNP_caller)+
geom_alluvium(aes(fill=SNP_caller),
aes.bind = "alluvia",
colour = "darkgray",
reverse = FALSE) +
geom_stratum(aes(fill = SNP_caller), reverse = FALSE)
test.df %>%
rowid_to_column("alluvium") %>%
ggplot() +
aes(x=Mappers,y=value,
stratum=SNP_caller, alluvium=alluvium, label=SNP_caller)+
geom_alluvium(aes(fill=SNP_caller),
aes.bind = "alluvia",
colour = "darkgray",
reverse = FALSE) +
geom_stratum(aes(fill = SNP_caller), reverse = FALSE) +
geom_text(stat = "stratum", reverse = FALSE) +
scale_x_discrete(expand = expansion(mult = .1))
test.df
penguins_lodes %>%
ggplot(
aes(
x = variable, y = freq,
stratum = stratum, alluvium = alluvium, label = stratum
)
)
penguins_lodes %>%
ggplot(
aes(
x = variable, y = freq,
stratum = stratum, alluvium = alluvium, label = stratum
)
) +
+
geom_alluvium(
aes(fill = species),
aes.bind = "alluvia", colour = "darkgray", reverse = FALSE
) +
geom_stratum(aes(fill = stratum), reverse = FALSE) +
geom_text(stat = "stratum", reverse = FALSE) +
scale_x_discrete(expand = expansion(mult = .1))
penguins_lodes %>%
ggplot(
aes(
x = variable, y = freq,
stratum = stratum, alluvium = alluvium, label = stratum
)
) +
geom_alluvium(
aes(fill = species),
aes.bind = "alluvia", colour = "darkgray", reverse = FALSE
) +
geom_stratum(aes(fill = stratum), reverse = FALSE) +
geom_text(stat = "stratum", reverse = FALSE) +
scale_x_discrete(expand = expansion(mult = .1))
penguins_lodes %>%
ggplot(
aes(
x = variable, y = freq,
stratum = stratum, alluvium = alluvium, label = stratum
)
) +
geom_alluvium(
aes(fill = species),
aes.bind = "alluvia", colour = "darkgray", reverse = FALSE
)
penguins_lodes
test.df
test.df %>%
pivot_longer(names_to = "program", values_to = "SNP" )
test.df %>%
pivot_longer(cols = 1:2, names_to = "program", values_to = "SNP" )
test.df %>%
pivot_longer(cols = 1:3, names_to = "program", values_to = "SNP" )
test.df %>%
pivot_longer(cols = 1:3, names_to = "program")
test.df %>%
pivot_longer(cols = 1:2, names_to = "program", values_to = "SNP" )
penguins_lodes
penguins_lodes
test.df %>%
pivot_longer(cols = 1:2, names_to = "program", values_to = "SNP" )
test.df %>%
pivot_longer(cols = 1:2, names_to = "stratum", values_to = "SNP" )
test.df %>%
pivot_longer(cols = 1:2, names_to = "stratum", values_to = "SNP_caller" )
test.df %>%
pivot_longer(cols = 1:2, names_to = "stratum", values_to = "program" )
penguins_lodes
test.df %>%
pivot_longer(cols = 1:2, names_to = "stratum", values_to = "program" ) %>%
rowid_to_column("alluvium")
test.df %>%
pivot_longer(cols = 1:2, names_to = "stratum", values_to = "program" ) %>%
rowid_to_column("alluvium")
penguins_lodes
test.df %>%
pivot_longer(cols = 1:2, names_to = "stratum", values_to = "program" ) %>%
rowid_to_column("alluvium")
test.df %>%
#pivot_longer(cols = 1:2, names_to = "stratum", values_to = "program" ) %>%
rowid_to_column("alluvium")
ggplot(aes(y=value, axis1=Mappers, axis2=SNP_caller)) +
geom_alluvium()
test.df %>%
#pivot_longer(cols = 1:2, names_to = "stratum", values_to = "program" ) %>%
rowid_to_column("alluvium") %>%
ggplot(aes(y=value, axis1=Mappers, axis2=SNP_caller)) +
geom_alluvium()
test.df %>%
#pivot_longer(cols = 1:2, names_to = "stratum", values_to = "program" ) %>%
rowid_to_column("alluvium") %>%
ggplot(aes(y=value, axis1=Mappers, axis2=SNP_caller)) +
geom_alluvium(aes(fill=value))
test.df %>%
#pivot_longer(cols = 1:2, names_to = "stratum", values_to = "program" ) %>%
rowid_to_column("alluvium") %>%
ggplot(aes(y=value, axis1=Mappers, axis2=SNP_caller)) +
geom_alluvium(aes(fill=value)) +
geom_stratum(width = 1/12, fill = "black", color = "grey")
test.df %>%
#pivot_longer(cols = 1:2, names_to = "stratum", values_to = "program" ) %>%
rowid_to_column("alluvium")
ggplot(aes(y=value, axis1=Mappers, axis2=SNP_caller)) +
geom_alluvium(aes(fill=value)) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum)))
test.df %>%
#pivot_longer(cols = 1:2, names_to = "stratum", values_to = "program" ) %>%
rowid_to_column("alluvium") %>%
ggplot(aes(y=value, axis1=Mappers, axis2=SNP_caller)) +
geom_alluvium(aes(fill=value)) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum)))
test.df %>%
#pivot_longer(cols = 1:2, names_to = "stratum", values_to = "program" ) %>%
rowid_to_column("alluvium") %>%
ggplot(aes(y=value, axis1=Mappers, axis2=SNP_caller)) +
geom_alluvium(aes(fill=value)) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum)))  +
scale_x_discrete(limits = c("Gender", "Dept"), expand = c(.05, .05))
test.df %>%
#pivot_longer(cols = 1:2, names_to = "stratum", values_to = "program" ) %>%
rowid_to_column("alluvium") %>%
ggplot(aes(y=value, axis1=Mappers, axis2=SNP_caller)) +
geom_alluvium(aes(fill=value)) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum)))  +
scale_x_discrete(limits = c("Gender", "Dept"), expand = c(.05, .05))  +
scale_fill_brewer(type = "qual", palette = "Set1")
test.df %>%
#pivot_longer(cols = 1:2, names_to = "stratum", values_to = "program" ) %>%
rowid_to_column("alluvium") %>%
ggplot(aes(y=value, axis1=Mappers, axis2=SNP_caller)) +
geom_alluvium(aes(fill=value)) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum)))  +
scale_x_discrete(limits = c("Gender", "Dept"), expand = c(.05, .05))  +
ggtitle("UC Berkeley admissions and rejections, by sex and department")
test.df %>%
#pivot_longer(cols = 1:2, names_to = "stratum", values_to = "program" ) %>%
rowid_to_column("alluvium") %>%
ggplot(aes(y=value, axis1=Mappers, axis2=SNP_caller)) +
geom_alluvium(aes(fill=value)) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum)))  +
scale_x_discrete(limits = c("Mappers", "SNP callers"), expand = c(.05, .05))  +
ggtitle("UC Berkeley admissions and rejections, by sex and department")
test.df %>%
#pivot_longer(cols = 1:2, names_to = "stratum", values_to = "program" ) %>%
rowid_to_column("alluvium") %>%
ggplot(aes(y=value, axis1=Mappers, axis2=SNP_caller)) +
geom_alluvium(aes(fill=value)) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum)))  +
scale_x_discrete(limits = c("Mappers", "SNP callers"), expand = c(.05, .05))  +
ggtitle("Amount of SNPs that is called from combination of SNP callers and Mappers")
library(tidyverse)
airmen_raw <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-02-08/airmen.csv")
airmen_raw %>% count(pilot_type)
airmen_raw
airmen_raw %>%
kableExtra::kable()
airmen_raw %>%
kableExtra::kbl()
# fix spelling error
airmen_raw <- airmen_raw %>%
mutate(pilot_type = str_replace(pilot_type, "Liason", "Liaison"))
airmen %>%
ggplot(., aes(pilot_type,fill=rank_at_graduation)) +
geom_bar(stat="count")
airmen_raw <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-02-08/airmen.csv")
airmen_raw %>% count(pilot_type)
airmen_raw %>%
kableExtra::kbl()
# fix spelling error
airmen <- airmen_raw %>%
mutate(pilot_type = str_replace(pilot_type, "Liason", "Liaison"))
airmen %>%
ggplot(., aes(pilot_type,fill=rank_at_graduation)) +
geom_bar(stat="count")
library(infer)
aircraft <- c("Single engine", "Twin engine")
ranks <- c("Flight Officer", "2nd Lt")
pilot_vs_rank <-
airmen %>%
filter(pilot_type %in% aircraft, rank_at_graduation %in% ranks) %>%
specify(pilot_type ~ rank_at_graduation, success = "Twin engine")
pilot_vs_rank
set.seed(123)
bootstrapped <-
pilot_vs_rank %>%
generate(reps = 1000, type = "bootstrap")
bootstrapped
set.seed(234)
permuted <-
pilot_vs_rank %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute")
permuted
pilot_vs_rank
pilot_vs_rank
observed <-
pilot_vs_rank %>%
calculate(stat = "chisq", order = ranks)
observed
pilot_vs_rank
airmen_chisq <-
bootstrapped %>%
calculate(stat = "chisq", order = ranks)
get_ci(airmen_chisq)
airmen_chisq
get_ci(airmen_chisq)
visualize(airmen_chisq) +
shade_ci(
endpoints = get_ci(airmen_chisq),
fill = "midnightblue",
color = "midnightblue",
lty = 2
)
