geom_segment(data=grid_data, aes(x = end, y = 40, xend = start, yend = 40), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 20, xend = start, yend = 20), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
annotate("text", x = rep(max(data$id),4), y = c(20, 40, 60, 80), label = c("20", "40", "60", "80") , color="grey", size=3 , angle=0, fontface="bold", hjust=1) +
geom_bar(aes(x=as.factor(id), y=value, fill=group), stat="identity", alpha=0.5) +
ylim(-100,120) +
theme_minimal() +
theme( legend.position = "none", axis.text = element_blank(),
axis.title = element_blank(), panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm") ) +
coord_polar() +
geom_text(data=label_data, aes(x=id, y=value+10, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE ) +
geom_segment(data=base_data, aes(x = start, y = -5, xend = end, yend = -5), colour = "black", alpha=0.8, size=0.6 , inherit.aes = FALSE ) +
geom_text(data=base_data, aes(x = title, y = -18, label=group), hjust=c(1,1,0,0), colour = "black", alpha=0.8, size=4, fontface="bold", inherit.aes = FALSE)
data
grid_data
library(ggtext)
food_consumption <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-18/food_consumption.csv')
food_consumption %>% glimpse()
## going to make a polar bar plot. First have to make labels
#--- --- --- --- --- --- --- --- ---
label_data2 <- food_consumption %>% group_by(country) %>%
summarise(sum=sum(co2_emmission)) %>%
arrange(desc(sum))
label_data2$id <- c(1:nrow(label_data2))
# calculate the ANGLE of the labels
number_of_bar <- nrow(label_data2)
angle <-  90 - 360 * ( label_data2$id-.5 )  /number_of_bar
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
label_data2$hjust<-ifelse( angle < -90, 1, 0)
# flip angle to make them readable
label_data2$angle<-ifelse(angle < -90, angle+180, angle)
# find order of countries to use for scale_x, turn into factor
order <- label_data2$country
order <- c(order)
order <- factor(order, levels=order)
# Create small df to add special annotation using geom_richtext (ggtext)
# this took some trial and error to get the position right
df <- data.frame(
label = c(
"Carbon emissions released due to<br> <span style = 'color:#e76a6a'>**Meat**</span>, <span style = 'color:#efefe8'>**Dairy & Eggs**,</span> & <span style = 'color:#6dac4f'>**Nuts & Grains**</span><br>per person per year in 130 countries"  ),
x = c(65),
y = c(-1100),
hjust = c(0.5),
vjust = c(1),
angle = c(0),
color = c("grey90")
)
# make color palette. Going to arrange into Meat, Dairy, & Plants,
# so I chose a nice pink, milky white, and green
pal <- c("#e76a6a","#efefe8","#6dac4f")
quartz()
# Make the Plot
#--- --- --- --- --- --- --- --- --- ---
food_consumption %>%
group_by(country) %>%
#group into category types & order levels
mutate(food_category2 = case_when(food_category %in% c("Beef","Fish","Lamb & Goat","Pork","Poultry") ~ "Meat",
food_category %in% c("Eggs","Milk - inc. cheese") ~ "Eggs & Dairy",
food_category %in% c("Nuts inc. Peanut Butter","Rice","Soybeans","Wheat and Wheat Products") ~ "Nuts & Grains"
)) %>%
mutate(food_category2 = factor(food_category2,levels = c("Meat","Eggs & Dairy","Nuts & Grains"))) %>%
# start ggplot
ggplot( aes(fill=food_category2, y=co2_emmission, x=country)) +
#add bars, order, color
geom_bar(position="stack", stat="identity") +
scale_x_discrete(limits=order)+
scale_fill_manual(values=pal,guide=F)+
# add ylim to keep empty circle in middle
ylim(-1500,2250) +
# remove axes and turn polar
theme_void() +
coord_polar(direction = 1,
clip = "off") +
# add country labels
geom_text(data=label_data2, aes(x=id, y=sum+50, label=country, hjust=hjust),
color="grey90", fontface="bold",alpha=0.6, size=2.5,
angle= label_data2$angle, inherit.aes = FALSE )  +
# add annotation in middle with colored words
geom_richtext(inherit.aes = F, data=df,
aes(x,y,label=label,hjust=hjust),
fill=NA, label.color=NA,size=2.75,
family="Helvetica Neue",color="grey90")+
# annotate title in middle
annotate(geom = "text",
x=0,y=-850,
hjust=.5, vjust=1,
label="How Carbon Intensive \nis Your Diet?",
size=5.5, lineheight=.8,
family="Staatliches Regular",
color="grey90")+
# annotate caption (real caption was too low)
annotate(geom = "text",
x=65,y=2200,
vjust=1,
hjust=.5,
label = "Data: FAO | Visualization: @Jake_Lawlor1",
size=2.5,
color="grey90")+
# annotate one scale value.
annotate(geom="text",
x=0.3,y=2000,
label="2000 Kg CO2-",
hjust=1,
size=1.5,
color="grey90",
alpha=.7)+
#background fill
theme(plot.background = element_rect(fill="#516869"))
# Make the Plot
#--- --- --- --- --- --- --- --- --- ---
food_consumption %>%
group_by(country) %>%
#group into category types & order levels
mutate(food_category2 = case_when(food_category %in% c("Beef","Fish","Lamb & Goat","Pork","Poultry") ~ "Meat",
food_category %in% c("Eggs","Milk - inc. cheese") ~ "Eggs & Dairy",
food_category %in% c("Nuts inc. Peanut Butter","Rice","Soybeans","Wheat and Wheat Products") ~ "Nuts & Grains"
)) %>%
mutate(food_category2 = factor(food_category2,levels = c("Meat","Eggs & Dairy","Nuts & Grains"))) %>%
# start ggplot
ggplot( aes(fill=food_category2, y=co2_emmission, x=country)) +
#add bars, order, color
geom_bar(position="stack", stat="identity") +
scale_x_discrete(limits=order)+
scale_fill_manual(values=pal,guide=F)+
coord_polar(direction = 1,
clip = "off")
# Make the Plot
#--- --- --- --- --- --- --- --- --- ---
food_consumption %>%
group_by(country) %>%
#group into category types & order levels
mutate(food_category2 = case_when(food_category %in% c("Beef","Fish","Lamb & Goat","Pork","Poultry") ~ "Meat",
food_category %in% c("Eggs","Milk - inc. cheese") ~ "Eggs & Dairy",
food_category %in% c("Nuts inc. Peanut Butter","Rice","Soybeans","Wheat and Wheat Products") ~ "Nuts & Grains"
)) %>%
mutate(food_category2 = factor(food_category2,levels = c("Meat","Eggs & Dairy","Nuts & Grains"))) %>%
# start ggplot
ggplot( aes(fill=food_category2, y=co2_emmission, x=country)) +
#add bars, order, color
geom_bar(position="stack", stat="identity") +
scale_x_discrete(limits=order)+
scale_fill_manual(values=pal,guide=F)+
ylim(-1500,2250) +
coord_polar(direction = 1,
clip = "off")
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_bar(data=variants1,aes(var1.pos, var1.height), width=1, col='red')
genome_size = seq(0,6000000,1000)         # size of the genome
height1 = rep(1.1,length(genome_size))    # genome 1
height2 = rep(1.5,length(genome_size))    # genome 2
circles = as.data.frame(cbind(genome_size,height1,height2)) # compile it into a data.frame
variants1 = data.frame(var1.pos = sample(1:6000000,100), var1.height = 1.3)
variants2 = data.frame(var2.pos = sample(1:6000000,100), var2.height = 0.9)
ticks <- data.frame(
x1=seq(0,5500000,500000),
y1=rep(0.7,12),
y2=rep(0.6,12),
x2=paste0((seq(0,5.5,0.5))),
angle=360000-seq(0,330,30)
)
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_bar(data=variants1,aes(var1.pos, var1.height), width=1, col='red')
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_col(data=variants1,aes(var1.pos, var1.height), width=1, col='red')
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_col(data=variants1,aes(var1.pos, var1.height), width=1, col='red') +
ylim(-2,2) +
coord_polar(direction = 1,
clip = "off")
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_col(data=variants1,aes(var1.pos, var1.height), width=1, col='red') +
ylim(-2,2) +
coord_polar(direction = 1,
clip = "off") +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5)
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_col(data=variants1,aes(var1.pos, var1.height), width=1, col='red') +
ylim(-2,2) +
coord_polar(direction = 1,
clip = "off") +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
# geom_jitter(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
coord_polar() +
ylim(c(0,NA)) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5))
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_col(data=variants1,aes(var1.pos, var1.height), width=1, col='red') +
ylim(-2,2) +
coord_polar(direction = 1,
clip = "off") +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
# geom_jitter(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
#coord_polar() +
ylim(c(0,NA)) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5))
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_col(data=variants1,aes(var1.pos, var1.height), width=1, col='red') +
coord_polar(direction = 1,
clip = "off") +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
# geom_jitter(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
#coord_polar() +
ylim(-2,2) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5))
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_col(data=variants1,aes(var1.pos, var1.height), width=1, col='red') +
coord_polar(direction = 1,
clip = "off") +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
# geom_jitter(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
#coord_polar() +
ylim(-2,2) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5))
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_col(data=variants1,aes(var1.pos, var1.height), width=1, col='red') +
coord_polar(direction = 1,
clip = "off")
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_col(data=variants1,aes(var1.pos, var1.height), width=1, col='red') +
coord_polar(direction = 1,
clip = "off") +
ylime(-2,2)
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_col(data=variants1,aes(var1.pos, var1.height), width=1, col='red') +
coord_polar(direction = 1,
clip = "off") +
ylim(-2,2)
genome_size = seq(0,6000000,1000)         # size of the genome
height1 = rep(1.1,length(genome_size))    # genome 1
height2 = rep(1.5,length(genome_size))    # genome 2
circles = as.data.frame(cbind(genome_size,height1,height2)) # compile it into a data.frame
variants1 = data.frame(var1.pos = sample(1:6000000,100), var1.height = 1.3)
variants2 = data.frame(var2.pos = sample(1:6000000,100), var2.height = 0.9)
ticks <- data.frame(
x1=seq(0,5500000,500000),
y1=rep(0.7,12),
y2=rep(0.6,12),
x2=paste0((seq(0,5.5,0.5))),
angle=360000-seq(0,330,30)
)
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_col(data=variants1,aes(var1.pos, var1.height), width=1, col='red') +
coord_polar(direction = 1,
clip = "off") +
ylim(-2,2)
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_col(data=variants1,aes(var1.pos, var1.height), width=1, col='red') +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
# geom_jitter(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
coord_polar() +
ylim(c(0,NA)) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5))
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_point(data=variants1,aes(var1.pos, var1.height), width=1, col='red') +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
# geom_jitter(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
coord_polar() +
ylim(c(0,NA)) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5))
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_point(data=variants1,aes(var1.pos, var1.height), col='red') +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
# geom_jitter(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
coord_polar() +
ylim(c(0,NA)) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5))
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_point(data=variants1,aes(var1.pos, var1.height), size=3, col='red') +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
# geom_jitter(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
coord_polar() +
ylim(c(0,NA)) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5))
remotes::install_github("AllanCameron/geomtextpath")
library(geomtextpath)
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_point(data=variants1,aes(var1.pos, var1.height), size=3, col='red') +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
# geom_jitter(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
coord_polar() +
ylim(c(0,NA)) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5))
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_point(data=variants1,aes(var1.pos, var1.height), size=3, col='red') +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
# geom_jitter(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
coord_polar() +
ylim(c(0,NA)) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5)) +
geom_textcurve(data = data.frame(x = 1, xend = 2, y = 1.1, yend = 1.2),
aes(x, y, xend = xend, yend = yend), hjust = 0.4,
curvature = -0.8, label = "significant difference")
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_point(data=variants1,aes(var1.pos, var1.height), size=3, col='red') +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
# geom_jitter(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
coord_polar() +
ylim(c(0,NA)) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5)) +
geom_textcurve(data = data.frame(x = 10, xend = 1000, y = 1.1, yend = 1.2),
aes(x, y, xend = xend, yend = yend), hjust = 0.4,
curvature = -0.8, label = "significant difference")
## chord diagram
library(circlize)               # making circular plots
library(tidyverse)              # best package ever
library(ltc)                    # color palettes package
## plot genome differences
library(scales)
library(ggforce)
test.df <- data.frame(Freebayes=sample(100:200,3), BCFtools=sample(100:200,3),
Lofreq=sample(200:250,3), Varscan=sample(300:350,3),
Mappers=c("Breseq","BWA","Minimap")) %>%
pivot_longer(!Mappers, names_to = "SNP_caller")
pltc(ltc("minou"))
# and choose the colors of your circus plot
col.pal = c(Freebayes="#00798c",Lofreq="#d1495b",Varscan="#edae49",BCFtools="#66a182",
Breseq="#2e4057", BWA="#8d96a3", Minimap= "#c9cdd4")
circos.clear()                # clear the area
# set the parameters of the chart
par(
mar = c(1, 0, 3, 0),        # Margin around chart
bg = c("white"),            # background color
family="Helvetica Neue Light"
)
# group the variables into callers and Mappers
SNP_callers = c("Freebayes","Lofreq","Varscan","BCFtools")
Mappers=c("Breseq","BWA","Minimap")
info=c(SNP_callers,Mappers)
chordDiagram(test.df, order=info,
directional = 1,            # ?
#annotationTrack = "grid",   # ?
diffHeight = F,            # ?
preAllocateTracks = list(list(track.height=  uh(3,"mm")),   # outside track for names ?
list(track.height=  uh(10,"mm"))), # middle track for regions ?
self.link = 1,              # ?
grid.col =col.pal,          # add colors in the bands
transparency = 0.2)         # add tansparency in the bands
chordDiagram(test.df, order=info,
directional = 1,            # ?
#annotationTrack = "grid",   # ?
diffHeight = F,            # ?
preAllocateTracks = list(list(track.height=  uh(3,"mm")),   # outside track for names ?
list(track.height=  uh(10,"mm"))), # middle track for regions ?
self.link = 1,              # ?
grid.col =col.pal,          # add colors in the bands
transparency = 0.2)         # add tansparency in the bands
highlight.sector(SNP_callers, track.index = 1, col = pal[1],  # what is track index, I have no idea
text = "SNP_callers", cex = 0.7, text.col = "white", niceFacing = TRUE)
highlight.sector(Mappers, track.index = 1, col = pal[2],
text = "Mappers", cex = 0.7, text.col = "white", niceFacing = TRUE)
title(main = list("Differences between callers and mappers",
cex=2.4,
col="grey75"))
genome_size = seq(0,6000000,1000)         # size of the genome
height1 = rep(1.1,length(genome_size))    # genome 1
height2 = rep(1.5,length(genome_size))    # genome 2
circles = as.data.frame(cbind(genome_size,height1,height2)) # compile it into a data.frame
variants1 = data.frame(var1.pos = sample(1:6000000,100), var1.height = 1.3)
variants2 = data.frame(var2.pos = sample(1:6000000,100), var2.height = 0.9)
ticks <- data.frame(
x1=seq(0,5500000,500000),
y1=rep(0.7,12),
y2=rep(0.6,12),
x2=paste0((seq(0,5.5,0.5))),
angle=360000-seq(0,330,30)
)
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_point(data=variants1,aes(var1.pos, var1.height), size=3, col='red') +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
# geom_jitter(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
coord_polar() +
ylim(c(0,NA)) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5)) +
geom_textcurve(data = data.frame(x = 10, xend = 1000, y = 1.1, yend = 1.2),
aes(x, y, xend = xend, yend = yend), hjust = 0.4,
curvature = -0.8, label = "significant difference")
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_point(data=variants1,aes(var1.pos, var1.height), size=3, col='red') +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
# geom_jitter(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
coord_polar() +
ylim(c(0,NA)) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5))
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_point(data=variants1,aes(var1.pos, var1.height), size=3, col='red') +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
geom_jitter(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
coord_polar() +
ylim(c(0,NA)) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5))
ggplot() +
geom_rect(xmin=0, xmax=6000000, ymin= 1.1, ymax=1.5, fill="#eae3dc") +
geom_line(data = circles , aes(genome_size,y1), color="#333333",size=3) +
geom_line(data = circles , aes(genome_size,y2), color="#333333",size=3.5) +
geom_jitter(data = variants1, aes(var1.pos, var1.height), size=3, color="#C02942", height=0.05, width = 0.05, alpha=0.7) +
geom_jitter(data = variants2, aes(var2.pos, var2.height), size=3, color="#ECD078", height=0.05, width = 0.05, alpha=0.7) +
coord_polar() +
ylim(c(0,NA)) +
geom_text(data = ticks, aes(x1, y1, label = "|", angle = angle)) +
geom_text(data = ticks, aes(x1, y2, label = x2, angle = angle), size=5) +
theme_void() +
labs(title="Ploting variant positions across genome") +
theme(plot.title = element_text(hjust=0.5))
